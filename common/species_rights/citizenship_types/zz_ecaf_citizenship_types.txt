# from = country
# this = species

citizenship_full = {
	is_full_citizenship = yes

	potential = {
		exists = from
		NOT = { from = { is_machine_empire = yes } }
	}

	triggered_pop_modifier = {
		potential = {
			owner = { has_valid_civic = civic_citizen_service }
			OR = {
				is_pop_category = specialist
				is_pop_category = worker
			}
		}
		pop_defense_armies_add = 1
	}

	triggered_pop_modifier = {
		potential = {
			owner = { has_valid_civic = civic_warrior_culture }
			is_pop_category = specialist
		}
		pop_defense_armies_add = 1
	}

	allow = {
		hidden_trigger = { exists = from }

		custom_tooltip = {
			fail_text = "pre_sapients_citizenship"
			is_sapient = yes
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		#custom_tooltip = {
		#	fail_text = "disconnected_machine_pops_kill_themselves_citizenship"
		#	is_disconnected_machine_pop = no
		#}
		custom_tooltip = {
			fail_text = "HIVE_MIND_SPECIES_CITIZENS_ONLY"
			OR = {
				NOT = { from = { is_hive_empire = yes } }
				has_trait = trait_hive_mind
			}
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
				from.owner_species = { # Extra Origins
					is_symbiote_of_prev = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = too_alien
			OR = {
				is_same_species = from
				from = {
					AND = {
						has_valid_civic = civic_selective_kinship
						is_same_species_class = root
					}
				}
				from = {
					is_xenophobe = no
				}
				AND = { # Ariphaos syntax change
					from = { has_origin = origin_synthetic_fertility }
					has_trait = trait_mechanical
				}
				from.owner_species = { # Extra Origins
					is_symbiote_of_prev = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = wrong_species_class
			if = {
				limit = {
					from = { has_valid_civic = civic_selective_kinship }
				}
				is_same_species_class = from
			}
		}
		custom_tooltip = {
			fail_text = no_service_no_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				has_military_service_type = { type = military_service_full country = from }
			}
		}
		custom_tooltip = {
            fail_text = "ROBOTS_NO_RIGHTS"
            if = {
                limit = {
                    OR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                from = {
                    has_policy_flag = ai_full_rights
                }
            }
        }
	}
	ai_will_do = {
        factor = 1
        modifier = {
            factor = 35
            root = {
                is_robotic_species = yes
            }
            from = {
                is_individual_machine = yes
            }
        }
    }
}

citizenship_limited = {
	new_pop_weight = 0.75

	pop_modifier = {
		pop_happiness = -0.1
		pop_amenities_usage_mult = -0.25
		pop_political_power = -0.5
	}

	triggered_pop_modifier = {
		potential = {
			owner = { has_valid_civic = civic_warrior_culture }
			is_pop_category = ruler
		}
		pop_defense_armies_add = 1
	}

	potential = {
		OR = {
			is_sapient = no
			AND = {
				exists = from
				from = {
					NOR = {
						is_hive_empire = yes
						is_machine_empire = yes
					}
				}
			}
		}
		NOR = {
			AND = {
				from = { is_individual_machine = no }
				has_trait = trait_machine_unit
			}
			is_shackled_robot_species_rights = yes
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = "presapients_not_accepted_citizenship"
			OR = {
				is_sapient = yes
				from = {
					NOT = {
						has_policy_flag = pre_sapients_eat
						has_policy_flag = pre_sapients_purge
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_SPECIES_CITIZENS_ONLY"
			OR = {
				OR = {
					from = { is_hive_empire = no }
					from = { has_valid_civic = civic_hive_guided_sapience }
				}
				has_trait = trait_hive_mind
			}
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_MAIN_SPECIES_ALWAYS_CITIZEN"
			NAND = {
				from = { is_hive_empire = yes }
				has_trait = trait_hive_mind
			}
		}
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = "disconnected_machine_pops_kill_themselves_citizenship"
			is_disconnected_machine_pop = no
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
				from.owner_species = { # Extra Origins
					is_symbiote_of_prev = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = yes_service_yes_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				NOT = { has_military_service_type = { type = military_service_full country = from } }
			}
		}
		custom_tooltip = {
			fail_text = selective_kinship_must_citizen
			if = {
				limit = {
					from = { has_valid_civic = civic_selective_kinship }
				}
				NOT = { is_same_species_class = from }
			}
		}
	}
	ai_will_do = {
		factor = 3
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				has_ai_personality_behaviour = multispecies
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = no
				is_xenophile = yes
			}
		}
		modifier = { # Extra Origins
			factor = 0
			AND = {
				from = {
					is_authoritarian = no
					is_xenophobe = no
				}
				from.owner_species = { is_symbiote_of_prev = yes }
			}
		}
		modifier = { # Extra Origins
			factor = 0.33
			from.owner_species = { is_symbiote_of_prev = yes }
		}
	}
}

citizenship_slavery = {
	is_slavery = yes

	in_breach_of = {
		{
			key = resolution_greatergood_balance_in_the_middle
		}
		{
			key = resolution_greatergood_universal_prosperity_mandate
		}
	}

	potential = {
		NAND = {
			exists = this
			OR = {
				AND = {
					from = { is_individual_machine = yes }
					OR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				has_trait = trait_machine_unit
				has_trait = trait_mechanical
			}
		}
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = "presapients_allowed_citizenship"
			OR = {
				is_sapient = yes
				from = {
					NOT = {
						has_policy_flag = pre_sapients_protect
						has_policy_flag = pre_sapients_allow
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "presapients_purged_citizenship"
			OR = {
				is_sapient = yes
				from = {
					NOT = {
						has_policy_flag = pre_sapients_purge
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_MAIN_SPECIES_ALWAYS_CITIZEN"
			NAND = {
				from = { is_hive_empire = yes }
				has_trait = trait_hive_mind
			}
		}
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = SERVITORS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_machine_servitor }
			}
		}
		custom_tooltip = {
			fail_text = ASSIMILATORS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_machine_assimilator }
			}
		}
		custom_tooltip = {
			fail_text = TERMINATORS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_machine_terminator }
			}
		}
		custom_tooltip = {
			fail_text = DEVOURERS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_hive_devouring_swarm }
			}
		}
		custom_tooltip = {
			fail_text = empire_xenophile
			from = {
				is_xenophile = no
			}
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
				from.owner_species = { # Extra Origins
					is_symbiote_of_prev = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = does_not_embrace_species_slavery
			from = {
				allows_slavery = yes
				OR = {
					is_xenophobe = yes
					is_authoritarian = yes
					is_gestalt = yes
					has_valid_civic = civic_slaver_guilds
					has_valid_civic = civic_indentured_assets
					has_valid_civic = civic_slaving_despots
				}
			}
		}
		custom_tooltip = {
			fail_text = yes_service_yes_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				NOT = { has_military_service_type = { type = military_service_full country = from } }
			}
		}
		custom_tooltip = {
			fail_text = selective_kinship_must_citizen
			if = {
				limit = {
					from = { has_valid_civic = civic_selective_kinship }
				}
				NOT = { is_same_species_class = from }
			}
		}
	}
	ai_will_do = {
		factor = 15
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				NOT = {
					has_ai_personality_behaviour = slaver
				}
				NAND = {
					is_ai = no
					is_xenophobe = yes
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				is_authoritarian = no
				is_xenophobe = no
				is_hive_empire = no
			}
		}
		modifier = {
			factor = 0.1
			from = {
				is_galactic_community_member = yes
			}
			OR = {
				is_active_resolution = "resolution_greatergood_balance_in_the_middle"
				is_active_resolution = "resolution_greatergood_universal_prosperity_mandate"
			}
		}
		modifier = {
			factor = 2
			has_species_flag = syncretic_species@from
		}
		modifier = { # Extra Origins
			factor = 0
			AND = {
				from = {
					is_authoritarian = no
					is_xenophobe = no
				}
				from.owner_species = { is_symbiote_of_prev = yes }
			}
		}
		modifier = { # Extra Origins
			add = -14
			from.owner_species = { is_symbiote_of_prev = yes }
		}
	}
}