
##########################
###  The Lost Emperor  ###
###  by Caligula       ###
##########################

namespace = mem_lost_emperor

##### Neochadanus Escaped, seized a planet 

planet_event = {
	id = mem_lost_emperor.30
	title = mem_lost_emperor.30.name
	desc = mem_lost_emperor.30.desc
	picture = GFX_evt_space_station
	location = root
	
	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_legendary_beholder"

	picture_event_data = {
		portrait = event_target:mem_neochadanus
	}

	is_triggered_only = yes
	
	trigger = {
		has_owner = yes
		exists = owner
		owner = {
			is_same_value = event_target:mem_neochadanus_victim_country
		}
	}
	
	immediate = {
		if = {
			limit = {
				has_planet_flag = mem_lost_emperor_crazy
			}
			from.species = {
				save_event_target_as = mem_neoch_releaser_species
			}
		}
		else = {
			from.owner.species = {
				save_event_target_as = mem_neoch_releaser_species
			}
		}

		create_country = {
			#Neochadanus stuff!
			type = default

			name = mem_neochadanus_country_name
			
			authority = auth_dictatorial
			
			ethos = {
				ethic = ethic_fanatic_authoritarian
				ethic = ethic_fanatic_spiritualist
				ethic = ethic_militarist
			}
			
			civics = {
				civic = mem_neochadanus_civic_1
				civic = mem_neochadanus_civic_2
				civic = mem_neochadanus_civic_3
			}

			species = event_target:mem_neoch_releaser_species
			
			effect = {
				save_event_target_as = mem_neochadanus_ascendant
				set_country_flag = mem_neochadanus_ascendant

				# mem_create_neochadanus = yes
				
				create_fleet = {
					name = "NAME_Other_Science_Ship"
					effect = {
						set_owner = event_target:mem_neochadanus_ascendant
						create_ship_design = {
							design = "NAME_Prototype"
						}
						create_ship = {
							name = "NAME_From_Beyond"
							design = last_created_design
							graphical_culture = "extra_dimensional_01"
							prefix = no
							upgradable = no
						}
						set_location = root
						save_event_target_as = deleted_ship
					}
				}
				event_target:deleted_ship = {
					set_leader = mem_neochadanus
					leader = {
						save_event_target_as = mem_neochadanus
						unassign_leader = this
					}
					event_target:mem_neochadanus_ascendant = {
						assign_leader = event_target:mem_neochadanus
					}
					delete_fleet = this
				}


				
				add_modifier = { #ethics pull and unrest annihilated
					modifier = mem_neochadanus_setup_boost
					days = 4800
				}
				
				root = {					
					if = {
						limit = {
							NOT = {
								is_planet_class = pc_city
							}
						}
						change_planet_size = 3
					}
					add_modifier = { #these are too dangerous to not limit to one planet
						modifier = mem_neochadanus_setup_boost_planet
						days = 4800
					}
				
					set_owner = event_target:mem_neochadanus_ascendant
					
					solar_system.starbase = {
						set_owner = event_target:mem_neochadanus_ascendant
						set_starbase_size = starbase_citadel
						
						set_starbase_module = {
							slot = 1
							module = shipyard
						}
						set_starbase_module = {
							slot = 2
							module = shipyard
						}
						set_starbase_module = {
							slot = 3
							module = shipyard
						}
						set_starbase_module = {
							slot = 4
							module = anchorage
						}
						set_starbase_module = {
							slot = 5
							module = anchorage
						}
						set_starbase_module = {
							slot = 6
							module = missile_battery
						}
						
						set_starbase_building = {
							slot = 1
							building = crew_quarters
						}
						set_starbase_building = {
							slot = 2
							building = hydroponics_bay
						}
						set_starbase_building = {
							slot = 3
							building = fleet_academy
						}
						set_starbase_building = {
							slot = 4
							building = target_uplink_computer
						}
					}

					mem_lost_emperor_give_root_planet_enough_pops_and_infrastructure = yes

					#Give them some habitats, because why not
					solar_system = {
						while = {
							limit = {
								NOT = {
									solar_system = {
										has_star_flag = ring_world_built
									}
								}
								any_system_planet = {
									has_anomaly = no
									is_artificial = no
									has_orbital_station = no
									is_asteroid = no
									is_moon = no
									is_star = no
								}
							}
							count = 3
							
							random_system_planet = {
								limit = {
									has_anomaly = no
									is_artificial = no
									has_orbital_station = no
									is_asteroid = no
									is_moon = no
									is_star = no
								}

								save_event_target_as = mem_planet
								# log = "[this.GetName]"
								
								solar_system = {
									spawn_planet = {
										class = "pc_habitat"
										location = event_target:mem_planet
										orbit_location = yes
										orbit_angle_offset = 45
										orbit_distance_offset = 9.899
										size = 6
										has_ring = no
										
										init_effect = {
											set_name = "HABITAT_PLANET_NAME"
											set_planet_entity = {
												entity = "orbital_habitat_entity"
												graphical_culture = event_target:mem_neochadanus_ascendant
											}
											set_surveyed = {
												surveyed = yes
												surveyor = event_target:mem_neochadanus_ascendant
											}
											set_all_comms_surveyed = yes
											clear_blockers = yes
											if = {
												limit = {
													from = { has_ascension_perk = ap_master_builders }
													NOT = { has_modifier = master_builders_habitats }
												}
												add_modifier = {
													modifier = master_builders_habitats
													days = -1
												}
											}
											set_planet_flag = megastructure
											set_planet_flag = habitat
										}
									}
								}
								set_planet_flag = has_megastructure
								#remove_megastructure = fromfrom
							}
						}
					}
				}
				
				event_target:mem_neochadanus_victim_country = {
					every_relation = {
						limit = {
							NOT = {
								is_same_value = event_target:mem_neochadanus_ascendant
							}
						}
						establish_communications_no_message = event_target:mem_neochadanus_ascendant
						country_event = { id = mem_lost_emperor.31 } #tell them about it
					}
					establish_communications_no_message = event_target:mem_neochadanus_ascendant
				}
				
				mem_give_neochadanus_resources = yes
				
				set_timed_country_flag = {
					flag = mem_neochadanus_ascendant_timer
					years = 50
				}
				
				if = {
					limit = {
						NOT = {
							event_target:mem_neochadanus_victim_country = {
								has_country_flag = mem_neochadanus_not_scorned
							}
						}
					}
					add_opinion_modifier = {
						who = event_target:mem_neochadanus_victim_country
						modifier = mem_neochadanus_scorned
					}
				}
				
				while = {
					count = 4
					
					closest_system = {
						limit = {
							is_owned_by = event_target:mem_neochadanus_victim_country
							has_owner = no
						}
						max_steps = 1
						starbase = {
							set_owner = event_target:mem_neochadanus_ascendant
						}
					}
				}
			}
		}
	}
	
	option = { #we must recover this lost territory!
		name = mem_lost_emperor.30.A
		
		hidden_effect = {
			solar_system = {
				add_claims = {
					who = event_target:mem_neochadanus_victim_country
				}
			}
		}
		event_target:mem_neochadanus_victim_country = {
			declare_war = {
				target = event_target:mem_neochadanus_ascendant
				attacker_war_goal = wg_conquest
			}
		}
	}
	
	option = { #let's see how this develops
		name = mem_lost_emperor.30.B
	}
}