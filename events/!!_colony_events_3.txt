##############################
# Colony Events
##############################

namespace = colony

# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
country_event = {
	id = colony.3051
	title = "colony.3051.name"
	desc = "colony.3051.desc"
	picture = GFX_evt_open_revolt
	location = ROOT

	is_triggered_only = yes

	trigger = {
		exists = event_target:demonic_incursion_armies
		from = { is_same_empire = event_target:demonic_incursion_armies }
	}

	immediate = {

		# Exile the Corrupted Knight
		event_target:doomslayer_knight@root = {
			exile_leader_as = doomslayer_knight
			save_event_target_as = doomslayer_knight
		}

		# Create the demonic incursion species and country
		create_demon_species_effect = yes
		create_country = {
			name = "NAME_Demon_Incursion"
			adjective = "NAME_Demon_Refugees"
			authority = auth_dictatorial
			ignore_initial_colony_error = yes
			civics = {
				civic = civic_fanatic_purifiers
				civic = civic_scavengers
				civic = random
			}
			species = last_created_species
			ethos = {
				ethic = ethic_fanatic_xenophobe
				ethic = ethic_fanatic_militarist
				ethic = ethic_spiritualist
			}
			flag = {
				icon = {
					category = "toxoid"
					file = "toxoid_03.dds"
				}
				background = {
					category = "backgrounds"
					file = "flag_BG_24.dds"
				}
				colors = {
					"shadow_purple"
					"black"
					"null"
					"null"
				}
			}
			type = default
			effect = {
				save_global_event_target_as = demonic_incursion_country
				species = {
					save_global_event_target_as = demonic_incursion_species
				}
				establish_communications_no_message = root

				# Corrupted Knight becomes their leader
				set_leader = doomslayer_knight
				event_target:doomslayer_knight@root  = {
					set_skill = 5
					add_trait = trait_ruler_warlike
					remove_trait = leader_trait_butcher
				}

				set_origin = origin_demonic_incursion
				force_add_civic = civic_psionic_sovereign

				##Copy technology
				copy_techs_from = {
					target = root
					except = {
						# Horizon Signal
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
					}
				}

				##Add resources
				add_resource = { minerals = 10000 }
				add_resource = { energy = 10000 }
				add_resource = { food = 3000 }
				add_resource = { consumer_goods = 3000 }
				add_resource = { alloys = 7000 }
				add_resource = { influence = 1000 }
				add_resource = { unity = 27000 }

				##Create fleets
				set_variable = {
					which = num_demon_fleets
					value = trigger:max_naval_capacity
				}

				divide_variable = {
					which = num_demon_fleets
					value = 90
				}

				ceiling_variable = num_demon_fleets

				while = {
					count = num_demon_fleets
					add_resource = { energy = 1000 } # Give some energy to pay for ship upkeep
					create_fleet = {
						effect = {
							set_owner = event_target:demonic_incursion_country
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory"
								graphical_culture = "pirate_01"
							}
							while = {
								count = 24
								create_ship = {
									name = random
									design = "NAME_Outrider"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 12
								create_ship = {
									name = random
									design = "NAME_Lancer"
									graphical_culture = "pirate_01"
								}
							}
							while = {
								count = 6
								create_ship = {
									name = random
									design = "NAME_Void_Champion"
									graphical_culture = "pirate_01"
								}
							}
							set_location = {
								target = event_target:demonic_incursion_planet
								distance = 10
								angle = random
							}
						}
					}
				}
			}
		}

		fromfrom = {
			set_owner = event_target:demonic_incursion_country
			set_capital = yes
			while = {
				count = 28
				create_pop = {
					species = event_target:demonic_incursion_species
				}
			}

			# Reformat the planet
			remove_all_districts = yes
			remove_all_buildings = yes
			generate_start_buildings_and_districts = yes
			remove_building = building_commercial_zone
			add_building = building_holo_theatres

			event_target:demonic_incursion_armies = {
				every_owned_army = {
					remove_army = yes
				}
			}

			# Flip control of the solar system
			solar_system = {
				if = {
					limit = { exists = starbase }
					starbase = {
						if = {
							limit = {
								is_owned_by = root
							}
							set_owner = event_target:demonic_incursion_country
							if = {
								limit = { has_starbase_size = starbase_outpost }
								set_starbase_size = starbase_starport
								set_starbase_module = {
									slot = 1
									module = shipyard
								}
								set_starbase_module = {
									slot = 2
									module = shipyard
								}
							}
							else_if = {
								limit = {
									NOT = { has_starbase_module = shipyard }
								}
								set_starbase_module = {
									slot = 1
									module = shipyard
								}
								set_starbase_module = {
									slot = 2
									module = shipyard
								}
							}
						}
					}
				}
				else = {
					create_starbase = {
						size = starbase_starport
						module = shipyard
						module = shipyard
						owner = event_target:demonic_incursion_country
					}
				}
				add_claims = {
					who = root
					show_notification = no
				}
				every_system_planet = {
					limit = {
						is_colony = yes
						NOT = { is_same_value = event_target:demonic_incursion_planet }
						is_owned_by = root
					}
					set_owner = event_target:demonic_incursion_country
				}
				every_fleet_in_system = {
					limit = { is_owned_by = root }
					set_mia = mia_return_home
				}
			}
		}
	}

	option = {
		name = colony.3051.a
		custom_tooltip = demonic_incursion_tooltip
	}

	option = {
		name = colony.3051.b
		custom_tooltip = demonic_takeover_tooltip
		hidden_effect = {
			event_target:demonic_incursion_country = { set_player = root }
		}
	}

	after = {
		hidden_effect = {
			fromfrom = {
				remove_deposit = d_portal_research_zone
			}
		}
	}
}

planet_event = { # Ending - grand opening and the last opportunity
	id = colony.9290
	title = "colony.9290.name"
	desc = "colony.9290.desc"
	picture = GFX_evt_announcement
	show_sound = event_celebration
	location = ROOT

	pre_triggers = {
		has_owner = yes
		is_homeworld = no
		original_owner = yes
		is_ai = no
		has_ground_combat = no
		is_capital = no
		original_owner = yes
		is_occupied_flag = no
	}

	is_triggered_only = yes

	immediate = {
	}

	option = { # casual - timed happiness boost
		name = colony.9290.a
		trigger = {
			owner = {
				is_gestalt = no
			}
		}
		owner = {
			add_modifier = {
				modifier = media_coverage_positive_medium
				years = 2
			}
		}
		remove_deposit = d_ancient_manufactorium_vaultexploration
		add_deposit = d_ancient_manufactorium_working
	}
	option = { # memorialists civic - adding 1 death/drone chronicler job
		name = colony.9290.b
		custom_tooltip = colony.9290.b.desc
		trigger = {
			owner = {
				OR = {
					has_civic = civic_memorialist
					has_civic = civic_machine_memorialist
					has_civic = civic_hive_memorialist
				}
			}
		}
		set_planet_flag = manufactorium_memorialists
		remove_deposit = d_ancient_manufactorium_vaultexploration
		add_deposit = d_ancient_manufactorium_working
	}
	option = { # aristocratic elite - adding 1 noble job
		name = colony.9290.c
		custom_tooltip = colony.9290.c.desc
		trigger = {
			owner = {
				has_civic = civic_aristocratic_elite
			}
		}
		set_planet_flag = manufactorium_aristocrats
		remove_deposit = d_ancient_manufactorium_vaultexploration
		add_deposit = d_ancient_manufactorium_working
	}
	option = { # free traders - adding 1 executive job
		name = colony.9290.d
		custom_tooltip = colony.9290.d.desc
		trigger = {
			owner = {
				is_megacorp = yes
				is_worker_coop_empire = no
			}
		}
		set_planet_flag = manufactorium_traders
		remove_deposit = d_ancient_manufactorium_vaultexploration
		add_deposit = d_ancient_manufactorium_working
	}
	option = { # casual - gestalt, nothing
		name = colony.9290.e
		trigger = {
			owner = {
				is_gestalt = yes
			}
		}
		remove_deposit = d_ancient_manufactorium_vaultexploration
		add_deposit = d_ancient_manufactorium_working
	}
}
